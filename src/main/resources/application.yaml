server:
  port: 8084
  servlet:
    context-path: /api

    # session过期时间 单位为秒
    session:
      timeout: 1800
spring:
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    url: jdbc:mysql:///bishe?characterEncoding=utf-8
    username: root
    password: pass
    driver-class-name: com.mysql.cj.jdbc.Driver
  mvc:
    static-path-pattern: /static/**

mybatis-plus:
  global-config:
    db-config:

      #驼峰下划线转换
#      column-underline: true

      #逻辑删除配置
      logic-delete-value: 0  # 数据删除时 设置为0
      logic-not-delete-value: 1  # 数据没有删除时 设置为1
      db-type: mysql # 数据库类型

      # 该设置控制是否启用刷新缓存。
      # 当设置为 false 时，在进行更新操作（比如插入、更新、删除）后，MyBatis-Plus 不会自动刷新缓存。
      # 这意味着，在进行修改操作后，查询时仍然可能获取到旧的缓存数据，直到下次缓存被重新加载或者手动刷新缓存为止。
    refresh: false
  configuration:
    # 这个选项指定了是否开启驼峰命名和下划线命名的自动映射转换。(java实体类驼峰命名对应数据库字段使用下划线命名)
    # 当设置为 `true` 时，数据库表字段使用下划线命名方式（比如 `user_name`），
    # 在映射到 Java 实体类时会自动转换为驼峰命名规则（如 `userName`），简化了实体类属性和数据库字段的对应关系。
    map-underscore-to-camel-case: false

    # 这个属性用来控制 MyBatis 的二级缓存是否启用。
    # 当设置为 `false` 时，禁用了 MyBatis 的二级缓存功能。
    # 二级缓存是指在会话级别的缓存，可以提高查询性能，但有时也可能带来一致性和并发问题。
    cache-enabled: false

    # 这个属性指定了 MyBatis 使用的日志输出实现。
    # 在这个例子中，日志输出到控制台（标准输出流）。可以根据需求设置不同的日志实现，比如输出到文件或集成其他日志框架
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  # 这个属性配置了 MyBatis Mapper XML 文件的位置。
  # 指定了 XML Mapper 文件所在的路径，这些文件描述了 SQL 映射和查询语句
  #mapper-locations: classpath:/mapper/*.xml

#分页助手
pagehelper:
  helper-dialect: mysql
  reasonable: true
  support-methods-arguments: true
  params: count=countSql


